grammar org.vanderveen.ev3rt.Dsl with org.eclipse.xtext.common.Terminals

generate behaviourDSL "erinvanderveen.nl/behaviourDSL"

Mission:
	'Mission' name = ID
	('Variables:' variables += Variable+)?
	'Behaviors:' behaviours += Behaviour+
;

Variable:
	name = ID
	("=" value = TruthValue)?
;

enum TruthValue:
	False = 'false' |
	True = 'true'
;

Behaviour:
	name = ID ':' control = Control
	('Conditions:' conditions += Condition*)?
	'Actions:' actions += Action+
;

enum Control:
	SKIP = 'Skip' |
	BLOCK = 'Block' |
	PASS = 'Pass'
;

// Conditions
Condition:
	(sensor = Sensor
	operator = Operator
	value = Value) | 
	(variable = Variable)
;

enum Sensor:
	TouchL = 'touchSensor left' |
	TouchR = 'touchSensor right' |
	ColorL = 'colorSensor left' |
	ColorC = 'colorSensor center' |
	ColorR = 'colorSensor right' |
	SonicF = 'ultrasonicSensor front' |
	SonicB = 'ultrasonicSensor back'
;

enum Operator:
	EQ  = '==' |
	NEQ = "!=" |
	GT  = ">"  |
	LT  = "<"  |
	GEQ = ">=" |
	LEQ = "<="
;

Value:
	TouchValue | ColorValue | Distance
;

TouchValue:
	pressed = PressedState
;

ColorValue:
	color = Color
;

enum PressedState:
	Unpressed | Pressed
;

enum Color:
	White | Black | Blue | Red | Yellow
;

Distance:
	cm = INT 'cm'
;

Rotation:
	degrees = INT 'degrees'
;

// Actions
Action:
	Move | Turn | Variable | Complete// | Sound// | Light)
;

Complete:
	'Complete' name = ID
;

Move:
	'Move' direction = Direction duration = Duration
;

Turn:
	'Turn' direction = Direction rotation = Rotation
;

Sound:
	'Play' 'sound' tone = Tone duration = Duration
;

Tone:
	frequency = INT 'Hz'
;

enum Direction:
	Forward = 'forward' |
	Backward = 'backward' |
	Left = 'left' |
	Right = 'right'
;

Duration:
	time = INT 'milliseconds'
;