/*
 * generated by Xtext 2.12.0
 */
package lego.mars.validation

import lego.mars.marsDSL.Behaviour
import lego.mars.marsDSL.Condition
import lego.mars.marsDSL.MarsDSLPackage.Literals
import lego.mars.marsDSL.Mission
import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class MarsDSLValidator extends AbstractMarsDSLValidator {
	
	@Check
	def checkForIdenticalBehaviorName(Mission root){
		
		var behaviors = root.behaviours
		for(var i = 0; i < behaviors.size; i++)
		{
			for(var j = i+1; j< behaviors.size; j++)
			{
				if(behaviors.get(i).name.equals(behaviors.get(j).name))
					error("Identical behavior names are not allowed", Literals.MISSION__BEHAVIOURS, j);	
			}
		}
	}
	
	@Check
	def checkForIdenticalBehavior(Mission root){
		
		var behaviors = root.behaviours
		for(var i = 0; i < behaviors.size; i++)
		{
			for(var j = i+1; j< behaviors.size; j++)
			{
				if(behaviors.get(i).name.equals(behaviors.get(j).name) &&
				   behaviors.get(i).control.equals(behaviors.get(j).control)
				)
				   
					error("Identical behavior is not allowed", Literals.MISSION__BEHAVIOURS, j);	
			}
		}
	}
	
	@Check
	def checkForIdentialVariables(Mission root){
		
		var variables = root.variables
		for(var i = 0; i < variables.size; i++)
		{
			for(var j = i+1; j< variables.size; j++)
			{
				if(variables.get(i).name.equals(variables.get(j).name) &&
				   variables.get(i).value.equals(variables.get(j).value)
				)
				   
					error("Duplicate variable initialization", Literals.MISSION__VARIABLES, j);	
			}
		}
	}
	
	
	
	
	
}
